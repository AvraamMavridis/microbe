{
  "name": "gulp-wrapper",
  "version": "0.1.5",
  "description": "A gulp plugin for wrapping files with custom strings. Access to filename is given through interpolation.",
  "main": "index.js",
  "scripts": {
    "test": "node node_modules/eslint/bin/eslint.js -c eslint.conf.json index.js && node_modules/.bin/mocha -R spec"
  },
  "keywords": [
    "gulp-wrapper",
    "wrap",
    "wrapper",
    "header",
    "footer",
    "gulpplugin"
  ],
  "author": {
    "name": "Antonis Karamitros",
    "email": "antouankar@gmail.com",
    "url": "https://github.com/antouank"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/AntouanK/gulp-wrapper.git"
  },
  "license": "MIT",
  "dependencies": {
    "through2": "~0.4.1",
    "gulp-util": "~2.2.14"
  },
  "devDependencies": {
    "mocha": "~1.18.2",
    "eslint": "~0.4.2",
    "should": "~3.1.4"
  },
  "readme": "gulp-wrapper\n============\n[![Build Status](https://travis-ci.org/AntouanK/gulp-wrapper.png?branch=master)](https://travis-ci.org/AntouanK/gulp-wrapper) [![NPM version](https://badge.fury.io/js/gulp-wrapper.png)](http://badge.fury.io/js/gulp-wrapper)\n\n> A [Gulp](https://github.com/wearefractal/gulp) plugin for wrapping files with custom strings.\nBasically `gulp-header` & `gulp-footer` together.\nWith the addition that the filename is revealed to the user ( with ${filename} ).\n\n##Usage\nFor example, on build I can wrap an HTML file with `<script>` template tags and specify the filename id. ( angular templates are a good use case )\n\nsample template file\n\n```\n<div>\n  <span>my template HTML is here</span>\n</div>\n```\n\nso in my `gulpfile.js` I can do\n\n```javascript\n\nvar gulp    = require('gulp'),\n    wrapper = require('gulp-wrapper');\n\n// ...\ngulp.src('template.html')\n    .pipe(wrapper({\n       header: '<script type=\"text/ng-template\" id=\"${filename}\">\\n',\n       footer: '</script>\\n'\n    }))\n    .pipe(gulp.dest('out'));\n```\n\nthe result is :\n```\n<script type=\"text/ng-template\" id=\"template.html\">\n<div>\n  <span>my template HTML is here</span>\n</div>\n</script>\n```\n\n\n##API\n\n\n####options.header\nType: `string` or `function`\n\nThe `string` you want to prepend to the file. The file name is available through interpolation `${filename}`\n\n```javascript\n//...\ngulp.src('script/*.js')\n    .pipe(wrapper({ header: '/* ${filename} MyCompany 2014 */'}))\n```\n\nA `function` that takes `file` as argument, and returns the string to be the header.\n```javascript\n//...\ngulp.src('script/*.js')\n    .pipe(wrapper({ header: function(file){ return '/* '+ file.path +' MyCompany 2014*/'; } }))\n```\n\n</br>\n####options.footer\nType: `string` or `function`\n\nThe `string` you want to append to the file. The file name is available through interpolation `${filename}`\n\n```javascript\n//...\ngulp.src('script/*.js')\n\t.pipe(wrapper({ footer: '/* ${filename} MyCompany 2014 */'}))\n```\nA `function` that takes `file` as argument, and returns the string to be the footer.\n```javascript\n//...\ngulp.src('script/*.js')\n    .pipe(wrapper({ footer: function(file){ return '/* '+ file.path +' MyCompany 2014*/'; } }))\n```\n",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/AntouanK/gulp-wrapper/issues"
  },
  "homepage": "https://github.com/AntouanK/gulp-wrapper",
  "_id": "gulp-wrapper@0.1.5",
  "dist": {
    "shasum": "0ceed3c20cd739157228d269e36872af7bda58f2"
  },
  "_from": "gulp-wrapper@^0.1.5",
  "_resolved": "https://registry.npmjs.org/gulp-wrapper/-/gulp-wrapper-0.1.5.tgz"
}
